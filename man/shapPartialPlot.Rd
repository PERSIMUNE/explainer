% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shapPartialPlot.R
\name{shapPartialPlot}
\alias{shapPartialPlot}
\title{SHAP Partial Plot}
\usage{
shapPartialPlot(shap_Mean_long)
}
\arguments{
\item{shap_Mean_long}{data frame containing SHAP values in long format}
}
\value{
Interactive partial dependence plot
}
\description{
Generates an interactive partial dependence plot based on SHAP values, visualizing the marginal effect of one or two features on the predicted outcome of a machine learning model.
}
\examples{
\donttest{
library("explainer")
seed <- 246
set.seed(seed)
# Install and load necessary packages
if (!requireNamespace("mlbench", quietly = TRUE)) {
  install.packages("mlbench")
  library(mlbench)
}
if (!requireNamespace("mlr3learners", quietly = TRUE)) {
  install.packages("mlr3learners")
  library(mlr3learners)
}
if (!requireNamespace("ranger", quietly = TRUE)) {
  install.packages("ranger")
  library(ranger)
}
# Load BreastCancer dataset
utils::data("BreastCancer", package = "mlbench")
target_col <- "Class"
positive_class <- "malignant"
mydata <- BreastCancer[, -1]
mydata <- na.omit(mydata)
sex <- sample(
  c("Male", "Female"),
  size = nrow(mydata),
  replace = TRUE
)
mydata$age <- as.numeric(sample(
  seq(18,60),
  size = nrow(mydata),
  replace = TRUE
))
mydata$sex <- factor(
  sex,
  levels = c("Male", "Female"),
  labels = c(1, 0)
)
maintask <- mlr3::TaskClassif$new(
  id = "my_classification_task",
  backend = mydata,
  target = target_col,
  positive = positive_class
)
splits <- mlr3::partition(maintask)
mylrn <- mlr3::lrn(
  "classif.ranger",
  predict_type = "prob"
)
SHAP_output <- eSHAP_plot(
  task = maintask,
  trained_model = mylrn,
  splits = splits,
  sample.size = 30,
  seed = seed,
  subset = 0.8
)
shap_Mean_long <- SHAP_output[[3]]
myplot <- shapPartialPlot(shap_Mean_long)
}
}
